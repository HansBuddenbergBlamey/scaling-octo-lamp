name: Setup Project

on:
  push:
    branches:
      - main

jobs:
  Check_Init:
    runs-on: ubuntu-latest
    outputs:
      script_already_ran: ${{ steps.check_state.outputs.script_already_ran }}
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Chequear si el script ya se ejecutÃ³
      id: check_state
      run: |
        if [ -f ".github/script_ran" ]; then
          echo "script_already_ran=true" >> $GITHUB_OUTPUT
        else
          echo "script_already_ran=false" >> $GITHUB_OUTPUT
        fi

    - name: Validacion de estado de la InitializaciÃ³n
      run: |
        if [ "${{ steps.check_state.outputs.script_already_ran }}" == "true" ]; then
          echo -e "Existe Archivo: \033[0;32m${{ steps.check_state.outputs.script_already_ran }}\033[0m - Listo Para Ejecutar: \033[0;31mfalse\033[0m."
        else
          echo -e "Existe Archivo: \033[0;31m${{ steps.check_state.outputs.script_already_ran }}\033[0m - Listo Para Ejecutar: \033[0;32mtrue\033[0m."
        fi

  Setear_GitFlow:
    runs-on: ubuntu-latest
    needs: Check_Init
    if: needs.Check_Init.outputs.script_already_ran == 'false'
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Validacion branch Develop
      id: check_develop_branch
      run: |
        if git ls-remote --heads origin develop; then
          echo "branch_exists=true" >> $GITHUB_ENV
        else
          echo "branch_exists=false" >> $GITHUB_ENV
        fi

    - name: Git config
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global init.defaultBranch main

    - name: CreaciÃ³n de Git Flow
      if: env.branch_exists == 'false'
      run: |
        sudo apt-get update
        sudo apt-get -y install git-flow
        git flow init -d

    - name: Resetear develop usando main
      run: |
        git fetch origin
        if [ "${{ env.branch_exists }}" == "false" ]; then
          git checkout -b develop origin/main
        else
          git checkout develop
          git reset --hard origin/main
        fi
        git push --force origin develop

  Setear_GitIgnore:
    runs-on: ubuntu-latest
    needs: Setear_GitFlow
    if: needs.Check_Init.outputs.script_already_ran != 'false'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Creacion de Git Ignore
      run: |
        echo ".github/script_ran" >> .gitignore
        echo "dmypy.json" >> .gitignore
        echo "" >> .gitignore
        echo "# Pyre type checker" >> .gitignore
        echo ".pyre/" >> .gitignore
        echo "" >> .gitignore
        echo "# pytype static type analyzer" >> .gitignore
        echo ".pytype/" >> .gitignore
        echo "" >> .gitignore
        echo "# Cython debug symbols" >> .gitignore
        echo "cython_debug/" >> .gitignore
        echo "" >> .gitignore
        echo "# VS Code" >> .gitignore
        echo ".vscode/" >> .gitignore
        echo "" >> .gitignore
        echo "# Otros" >> .gitignore
        echo "logs/" >> .gitignore
        echo "temp/" >> .gitignore
        echo "db/" >> .gitignore
        echo "src/" >> .gitignore
        echo "tests/" >> .gitignore
        echo "docs/" >> .gitignore
        echo "" >> .gitignore

    - name: Realizar commit de los cambios
      run: |
        git fetch origin
        git checkout develop || git checkout -b develop origin/main
        git add .gitignore
        git commit -m "Actualizar .gitignore"
        git push origin develop

  Instalar_Python:
    runs-on: ubuntu-latest
    needs: Setear_GitFlow
    if: needs.Check_Init.outputs.script_already_ran == 'false'
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Git config
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        #cache: "pip"

    - name: Cache virtualenv
      uses: actions/cache@v3
      id: cache-venv
      with:
        path: ./.venv/
        key: ${{ runner.os }}-.10-venv-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-3.10-venv-

    - name: 'Install python dependencies for generator'
      if: steps.cache-venv.outputs.cache-hit != 'true'
      run: |
        python --version
        python -m venv ./.venv
        source ./.venv/bin/activate
        python -m pip install --upgrade pip
        if [[ -f requirements.txt ]]; then
          pip install -r requirements.txt
        fi

    - name: 'Print python version'
      run: |
        which python
        python --version
        source ./.venv/bin/activate
        which python
        python --version

    - name: Realizar commit de los cambios
      run: |
        git fetch origin
        git checkout develop || git checkout -b develop origin/main
        git add requirements.txt
        git commit -m "Agregar requirements.txt"
        git push origin develop

  Finalizar_Setup:
    runs-on: ubuntu-latest
    needs: 
      - Check_Init
      - Setear_GitFlow
      - Setear_GitIgnore
      - Instalar_Python
    if: needs.Check_Init.outputs.script_already_ran == 'false'
    permissions:
      contents: write

    steps:  
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Crear archivo de estado
        if: needs.Check_Init.outputs.script_already_ran == 'false'
        run: |
          echo -e "Archivo de Estado Creado Previmente: \033[0;31m${{ needs.Check_Init.outputs.script_already_ran }}"
          #touch .github/script_ran
          echo -e "Archivo de Estado Creado Previmente: \033[0;32mtrue"

      - name: Realizar commit de los cambios
        uses: stefanzweifel/git-auto-commit-action@v5.0.1
        with:
          commit_message: Se aplico Setup al Projecto ${{ github.repository }} ðŸš€"
